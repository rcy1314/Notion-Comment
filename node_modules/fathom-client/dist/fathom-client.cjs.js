'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

// refer to https://usefathom.com/support/tracking-advanced

/**
 * Enqueues a command to dispatch to fathom when the library is loaded.
 *
 * @param command - A set of arguments to dispatch to fathom later.
 */
var enqueue = function enqueue(command) {
  window.__fathomClientQueue = window.__fathomClientQueue || [];

  window.__fathomClientQueue.push(command);
};
/**
 * Flushes the command queue.
 */


var flushQueue = function flushQueue() {
  window.__fathomClientQueue = window.__fathomClientQueue || [];

  window.__fathomClientQueue.forEach(function (command) {
    switch (command.type) {
      case 'trackPageview':
        if (command.opts) {
          window.fathom.trackPageview(command.opts);
        } else {
          window.fathom.trackPageview();
        }

        return;

      case 'trackGoal':
        window.fathom.trackGoal(command.code, command.cents);
        return;
    }
  });

  window.__fathomClientQueue = [];
};

var load = function load(siteId, opts) {
  var tracker = document.createElement('script');
  var firstScript = document.getElementsByTagName('script')[0];
  tracker.id = 'fathom-script';
  tracker.async = true;
  tracker.setAttribute('site', siteId);
  tracker.src = opts && opts.url ? opts.url : 'https://cdn.usefathom.com/script.js';

  if (opts) {
    if (opts.auto !== undefined) tracker.setAttribute('auto', "".concat(opts.auto));
    if (opts.honorDNT !== undefined) tracker.setAttribute('honor-dnt', "".concat(opts.honorDNT));
    if (opts.canonical !== undefined) tracker.setAttribute('canonical', "".concat(opts.canonical));
    if (opts.includedDomains) tracker.setAttribute('included-domains', opts.includedDomains.join(','));
    if (opts.excludedDomains) tracker.setAttribute('excluded-domains', opts.excludedDomains.join(','));
    if (opts.spa) tracker.setAttribute('spa', opts.spa);
  }

  tracker.onload = flushQueue;
  firstScript.parentNode.insertBefore(tracker, firstScript);
};
/**
 * Tracks a pageview.
 *
 * @param opts - An optional `url` or `referrer` to override auto-detected values.
 */

var trackPageview = function trackPageview(opts) {
  if (window.fathom) {
    if (opts) {
      window.fathom.trackPageview(opts);
    } else {
      window.fathom.trackPageview();
    }
  } else {
    enqueue({
      type: 'trackPageview',
      opts: opts
    });
  }
};
/**
 * Tracks a goal.
 *
 * @param code - The goal ID.
 * @param cents - The value in cents.
 */

var trackGoal = function trackGoal(code, cents) {
  if (window.fathom) {
    window.fathom.trackGoal(code, cents);
  } else {
    enqueue({
      type: 'trackGoal',
      code: code,
      cents: cents
    });
  }
};

exports.load = load;
exports.trackGoal = trackGoal;
exports.trackPageview = trackPageview;
